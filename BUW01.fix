# Transformation preparation
# Macro to provide 1-base array index position
do put_macro("arrayCounter")
  unless exists("$[arrayIndexName]")
    set_array("$[arrayIndexName]")
  end
  add_field("$[arrayIndexName].$append","Counter")
  set_array("$[arrayIndexPos]")
	copy_field("$[arrayIndexName]", "$[arrayIndexPos].$append")
	count("$[arrayIndexPos]")
end

# Variable
put_var("modsInputPath","metadata.mets:mets.mets:dmdSec.mets:mdWrap.mets:xmlData.mods:mods")
put_var("dcPath","mets:dmdSec.mets:mdWrap.mets:xmlData")

# Helper Elements
copy_field("header.identifier","oai_id")
# copy_field("oai_id","dmd_id")
# replace_all("dmd_id",".*\\.de:(.*)","md$1")
# copy_field("metadata.mets:mets.mets:structMap.*.mets:div.@DMDID","rel_dmd_id")
#
#
### New dmdSec with DC-Metadata
add_field("mets:dmdSec.@ID","ie-dmd")
add_field("mets:dmdSec.mets:mdWrap.@MDTYPE","DC")

#name space for DC
add_field("$[dcPath].dc:record.@xmlns:dc","http://purl.org/dc/elements/1.1/" )
add_field("$[dcPath].dc:record.@xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance")

set_array("$[dcPath].dc:record.dc:title")
set_array("$[dcPath].dc:record.dcterms:alternative")

do list(path:"$[modsInputPath].mods:titleInfo","var":"$i")
	if any_equal("$i.@type","alternative")
		copy_field("$i.mods:title.value","$[dcPath].dc:record.dcterms:alternative.$append.value")
	else
		copy_field("$i.mods:title.value","$[dcPath].dc:record.dc:title.$append.value")
	end
end

set_array("$[dcPath].dc:record.dc:creator")
set_array("$[dcPath].dc:record.dc:contributor")

do list(path:"$[modsInputPath].mods:name","var":"$i")
	if any_equal("$i.mods:role.mods:roleTerm.value","aut")
		copy_field("$i.mods:displayForm.value","$[dcPath].dc:record.dc:creator.$append.value")
	else
		copy_field("$i.mods:displayForm.value","$[dcPath].dc:record.dc:contributor.$append.value")
	end
end

set_array("$[dcPath].dc:record.dc:type")

copy_field("$[modsInputPath].mods:typeOfResource.value","$[dcPath].dc:record.dc:type.$append.value")
copy_field("$[modsInputPath].mods:genre.value","$[dcPath].dc:record.dc:type.$append.value")
copy_field("$[modsInputPath].mods:originInfo.*.mods:issuance.value","$[dcPath].dc:record.dc:type.$append.value")


set_array("$[dcPath].dc:record.dc:coverage")
copy_field("$[modsInputPath].mods:subject.mods:hierarchicalGeographic.mods:city.value","$[dcPath].dc:record.dc:coverage.$append.value")


set_array("$[dcPath].dc:record.dc:publisher")
copy_field("$[modsInputPath].mods:originInfo.*.mods:publisher.value","$[dcPath].dc:record.dc:publisher.$append.value")

set_array("$[dcPath].dc:record.dcterms:issued")
set_array("$[dcPath].dc:record.dc:date")
do list(path: "$[modsInputPath].mods:originInfo","var":"$i")
	do list(path: "$i.mods:dateIssued","var":"$j")
		if exists("$j.@keyDate")
			copy_field("$j.value","$[dcPath].dc:record.dc:date.$append.value")
		else
			copy_field("$j.value","$[dcPath].dc:record.dcterms:issued.$append.value")
		end
	end
end


set_array("$[dcPath].dc:record.dc:language")
copy_field("$[modsInputPath].mods:language.mods:languageTerm.value","$[dcPath].dc:record.dc:language.$append.value")

set_array("$[dcPath].dc:record.dc:description")
set_array("$[dcPath].dc:record.dc:identifier")
copy_field("$[modsInputPath].mods:originInfo.*.mods:edition.value","$[dcPath].dc:record.dc:description.$append.value")

do list(path: "$[modsInputPath].mods:note","var":"$i")
	if any_equal("$i.@type","citation/reference")
		copy_field("$i.value","$[dcPath].dc:record.dc:identifier.$append.value")
	else
		copy_field("$i.value","$[dcPath].dc:record.dc:description.$append.value")
	end
end

do list(path: "$[modsInputPath].mods:identifier","var":"$i")

	if any_match("$i.@type","^urn.*$")
		paste("$[dcPath].dc:record.dc:identifier.$append.value","~https://nbn-resolving.org/","$i.value",join_char:"")
		copy_field("$i.value","$[dcPath].dc:record.dc:identifier.$append.value")
	else
		paste("$[dcPath].dc:record.dc:identifier.$append.value","$i.@type","~:","$i.value",join_char:"")
	end
end

paste("$[dcPath].dc:record.dc:identifier.$append.value","~system:","$[dcPath].mods:mods.mods:recordInfo.mods:recordIdentifier.value",join_char:"")

set_array("$[dcPath].dc:record.dc:format")
copy_field("$[modsInputPath].mods:physicalDescription.mods:extent.value","$[dcPath].dc:record.dc:format.$append.value")


set_array("$[dcPath].dc:record.dc:rights")
copy_field("$[modsInputPath].mods:accessCondition.value","$[dcPath].dc:record.dc:rights.$append.value")
copy_field("$[modsInputPath].mods:accessCondition.@xlink:href","$[dcPath].dc:record.dc:rights.$append.value")



# Restructure record

set_array("mets:amdSec")

# amdSec: ie-amd
add_field("mets:amdSec.$append.@ID","ie-amd")
copy_field("metadata.mets:mets","mets:amdSec.$last.mets:sourceMD.mets:mdWrap.mets:xmlData")
add_field("mets:amdSec.$last.mets:sourceMD.@ID","ie-amd-source-MODS")
add_field("mets:amdSec.$last.mets:sourceMD.mets:mdWrap.@MDTYPE","MODS")
remove_field("mets:amdSec.$last.mets:sourceMD.mets:mdWrap.mets:xmlData.mets:metsHdr") # Funktioniert nicht


add_field("mets:amdSec.$last.mets:digiprovMD.@ID","ie-amd-digiprov")
add_field("mets:amdSec.$last.mets:digiprovMD.mets:mdWrap.@MDTYPE","OTHER")
add_field("mets:amdSec.$last.mets:digiprovMD.mets:mdWrap.@OTHERMDTYPE","dnx")
add_field("mets:amdSec.$last.mets:digiprovMD.mets:mdWrap.mets:xmlData.dnx.@xmlns","http://www.exlibrisgroup.com/dps/dnx")

add_field("mets:amdSec.$last.mets:rightsMD.@ID","ie-amd-rights")
add_field("mets:amdSec.$last.mets:rightsMD.mets:mdWrap.@MDTYPE","OTHER")
add_field("mets:amdSec.$last.mets:rightsMD.mets:mdWrap.@OTHERMDTYPE","dnx")
add_field("mets:amdSec.$last.mets:rightsMD.mets:mdWrap.mets:xmlData.dnx.section.@id","accessRightsPolicy")

# Apply new fileSec, amdSec and structMap for each file(Group)
set_array("mets:fileSec.mets:fileGrp")
set_array("mets:structMap")
do list(path:"metadata.mets:mets.mets:fileSec.mets:fileGrp", "var":"$fileGrp")
	call_macro("arrayCounter",arrayIndexName:"representationIndex", arrayIndexPos:"representationPos")
	paste("mets:amdSec.$append.@ID", "~rep","representationPos","~-amd",join_char:"")
	paste("mets:amdSec.$last.mets:techMD.@ID", "~rep","representationPos","~-amd","~-tech",join_char:"")	
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.@MDTYPE","OTHER")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.@OTHERMDTYPE","dnx")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.@xmlns","http://www.exlibrisgroup.com/dps/dnx")
	set_array("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$append.@id","generalRepCharacteristics")
	set_array("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","representationEntityType")
	copy_field("$fileGrp.@USE","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","usageType")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","VIEW")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","DigitalOriginal")
	add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","false")			
	if any_equal("$fileGrp.@USE","MASTER")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","label")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","TIFF")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","preservationType")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","PRESERVATION_MASTER")	
	elsif any_equal("$fileGrp.@USE","DOWNLOAD")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","label")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","PDF")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","preservationType")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","MODIFIED_MASTER")	
	elsif any_equal("$fileGrp.@USE","FULLTEXT")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","label")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","XML")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","preservationType")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","MODIFIED_MASTER_02")	
	else
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","representationEntityType")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","UNSPECIFIC")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","preservationType")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","DERIVATIVE_COPY")	
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","RepresentationCode")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value","MEDIUM")	
	end

	paste("mets:fileSec.mets:fileGrp.$append.@ID", "~rep","representationPos",join_char:"")
	paste("mets:fileSec.mets:fileGrp.$last.@ADMID", "~rep","representationPos","~-amd",join_char:"")
	add_field("mets:fileSec.mets:fileGrp.$last.@USE","VIEW")
	set_array("mets:fileSec.mets:fileGrp.$last.mets:file")


	paste("mets:structMap.$append.@ID", "~rep","representationPos","~-1",join_char:"")
	add_field("mets:structMap.$last.@TYPE","LOGICAL")
	set_array("mets:structMap.$last.mets:div.mets:div")

	do list(path:"$fileGrp.mets:file","var":"$file")

# Get labels for files

	do list(path:"metadata.mets:mets.mets:structMap","var":"$structMap")
		if any_equal("$file.@MIMETYPE","application/pdf")
			if any_equal("$structMap.@TYPE","LOGICAL")
				if any_equal("$structMap.mets.div.@TYPE","multivolume_work")
					do list(path:"$structMap.mets:div.mets:div","var":"$j")
						if in("$file.@ID","$j.mets:fptr.@FILEID")
							copy_field("$j.@LABEL","$file.@fileLabel")
						end
					end
				else
					if in("$structMap.mets:div.mets:fptr.@FILEID","$file.@ID")
						copy_field("$structMap.mets:div.@LABEL","$file.@fileLabel")
					end
				end
			end
		else
			if any_equal("$structMap.@TYPE","PHYSICAL")
				if any_match("$file.@MIMETYPE","image/tiff|text/xml")
					do list(path:"$structMap.mets:div.mets:div","var":"$j")
						if in("$file.@ID","$j.mets:fptr.*.@FILEID")
							copy_field("$j.@LABEL","$file.@fileLabel")
						end
					end
				end
			end
		end
	end

		call_macro("arrayCounter",arrayIndexName:"fileIndex", arrayIndexPos:"filePos")
		paste("mets:amdSec.$append.@ID", "~fid","filePos", "~-","representationPos","~-amd",join_char:"")
		paste("mets:amdSec.$last.mets:techMD.@ID", "~fid","filePos", "~-","representationPos","~-amd","~-tech",join_char:"")	
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.@MDTYPE","OTHER")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.@OTHERMDTYPE","dnx")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.@xmlns","http://www.exlibrisgroup.com/dps/dnx")
		set_array("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section")
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$append.@id","generalFileCharacteristics")
		set_array("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key")

		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fileOriginalName")
		copy_field("$file.mets:FLocat.@xlink:href","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	

		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fileMIMEType")
		copy_field("$file.@MIMETYPE","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	

		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","note")
		copy_field("$file.@ID","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	
		if exists("$file.@SIZE")
			add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fileSizeBytes")
			copy_field("$file.@SIZE","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	
		end
		if exists("$file.@SIZE")
			add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fileCreationDate")
			copy_field("$file.@CREATED","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	
		end
		add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","label")
		copy_field("$file.@fileLabel","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")	
		unless is_empty("$file.@CHECKSUM")
			add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$append.@id","fileFixity")
			set_array("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key")
			add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fixityType")
			copy_field("$file.@CHECKSUMTYPE","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")
			add_field("mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$append.@id","fixityValue")
			copy_field("$file.@CHECKSUM","mets:amdSec.$last.mets:techMD.mets:mdWrap.mets:xmlData.dnx.section.$last.record.key.$last.value")
		end
		copy_field("$file.@MIMETYPE","mets:fileSec.mets:fileGrp.$last.mets:file.$append.@MIMETYPE")
		paste("mets:fileSec.mets:fileGrp.$last.mets:file.$last.@ID", "~fid","filePos", "~-","representationPos",join_char:"")
		paste("mets:fileSec.mets:fileGrp.$last.mets:file.$last.@ADMID", "~fid","filePos", "~-","representationPos","~-amd",join_char:"")	
		copy_field("$file.mets:FLocat","mets:fileSec.mets:fileGrp.$last.mets:file.$last.mets:FLocat")


	add_field("mets:structMap.$last.mets:div.mets:div.$append.@TYPE","FILE")
	copy_field("$file.@fileLabel","mets:structMap.$last.mets:div.mets:div.$last.@LABEL")	
	paste("mets:structMap.$last.mets:div.mets:div.$last.mets:fptr.@FILEID","~fid","filePos", "~-","representationPos",join_char:"")

	end
	remove_field("fileIndex")

end

retain("mets*")

